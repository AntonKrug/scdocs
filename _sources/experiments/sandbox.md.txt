# Sandbox

## For loops templates 

```{jinja} first_ctx

    {% for k, v in topics.items() %}

    {{k}} => {{v}}
    {% endfor %}
```


## Experiments with markup

```````{jinja} scvars

depends on the operating system.

Tables are created using the following code. A table has a
captionfigure points to a filename and has a caption. Optionally,
you can add a label. You can make references to a table using its
<!-- label as follows: :numref:`tab-wave-breaking`. -->

inline equation $z=\sqrt{x^2+y^2}$.



SoftConsole {{sc}}




Wrap in-line code blocks in backticks: `boolean example = true;`.

```
No syntax highlighting if no language
is indicated.
```


```python
note = "Python syntax highlighting"
print(node)
```





```{only} html and draft


Content for HTML and DRAFT

```



```{code-block} python
---
lineno-start: 10
emphasize-lines: 1, 3
---
a = 2
print('my 1st line')
print(f'my {a}nd line')
```

````{note}
The next info should be nested
```{warning}
Here's my warning
```
````

`````{tabs}
````{tab} App

        Apples are green, or sometimes red.

````
````{tab} Blue

        Apples are green, or sometimes red.

````
````{tab} Python

```{code-block} python
---
lineno-start: 10
emphasize-lines: 1, 3
caption: Caption. It is neat
---
a = 2
print('my 1st line')
print(f'my {a}nd line')
```        
````

`````


```{code-block} python
---
lineno-start: 10
emphasize-lines: 1, 3
caption: |
    This is my
    multi-line caption. It is *pretty nifty* ;-)
---
a = 2
b = a + 4
c = a + b+ a + 4
print('my 1st line')
print(f'my {a}nd line')
```



## Table

| a    | b    |
| :--- | ---: |
| c    | d    |


```{caution} Neque porro quisquam

   Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus mattis commodo eros, quis posuere enim lobortis quis. Nullam ut tempus nibh.
```



```{admonition} Additional steps
   Feel free to skip these
```


```````
