```````{jinja} scvars
{% import '_jinja/macros.html' as macros %}

# Workspaces

## Example workspace

SoftConsole includes an example workspace which is opened by default when you run SoftConsole. This example
workspace is located at:

`<SoftConsole-install-dir>/extras/workspace.examples`

This workspace contains several simple example projects and debug launch configurations that are ready to use
once the relevant projects have been updated to match the target hardware â€“ for example by copying the Libero
SoC generated **drivers_config** folder into the project where applicable. It is also advisable to update these
example projects with the relevant CMSIS/HAL and firmware drivers generated from the Firmware Catalog.
It is advisable to make a copy of this example workspace and use the copy for experimentation. Workspaces were
not designed nor intended to be shared between machines nor operating systems. Do not make your own empty
workspaces and do not transfer workspaces between machines or OSes.

```{note}
The SoftConsole uninstaller will delete some or all of this workspace in which case any changes made
may be lost.
```

Refer to the README.txt (or .md/.html) for each example project for more information.


### Example projects

The workspace is shipped with blinky projects for various targets (see their READMEs). However few projects have special reasons why they are bundled:

 - **mpfs-mustein-julia:** A Renode-only example showcasing a simple graphical peripheral and own platform
 - **mpfs-freertos-lwip:** Demonstration of a FreeRTOS implementation running a LwIP and a Webserver.
 - **miv-rv32iamf-mandelbrot-uart:** Displaying Mandelbrot fractals with ASCII art through UART while using the RISC-V F extension
 - **miv-rv32iamf-raytracer-uart-cpp:** ASCII art raytraced rendering of a sphere while using C++ and RISC-V F extension. Output is displayed over UART, extra attention needs to be paid to the readme and get the UART clocked correctly. The terminal window most likely must be resized to fit the content without any artifacts.

```{note}
All the Mi-V (including mpfs) projects can be run and debugged without target hardware on the Renode emulation platform. All the projects have enabled cppcheck on each build.
```


### Example debug launch configurations

## Empty workspace

## Creating a new workspace


```````