# Workspaces

## Example workspace

SoftConsole includes an example workspace which is opened by default when you run SoftConsole. This example
workspace is located at:

`<SoftConsole-install-dir>/extras/workspace.examples`

This workspace contains several simple example projects and debug launch configurations that are ready to use
once the relevant projects have been updated to match the target hardware â€“ for example by copying the Libero
SoC generated **drivers_config* folder into the project where applicable. It is also advisable to update these
example projects with the relevant CMSIS/HAL and firmware drivers generated from the Firmware Catalog.
It is advisable to make a copy of this example workspace and use the copy for experimentation. Workspaces were
not designed nor intended to be shared between machines nor operating systems. Do not make your own empty
workspaces and do not transfer workspaces between machines or OSes.

```{note}
The SoftConsole uninstaller will delete some or all of this workspace in which case any changes made
may be lost.
```

Refer to the README.txt (or .md/.html) for each example project for more information.


### Example projects

 - mpfs-blinky: Simple GPIO LED and UART example program targeting the Renode PolarFire SoC emulation platform. The associated tool and debug launch configurations facilitate debugging this example on the emulation platform. Refer to the README and Renode sections for more information.
 - mpfs-mustein-julia: A Renode-only example showcasing a simple graphical peripheral and own platform
 - mpfs-freertos-lwip: Demonstration of a FreeRTOS implementation running a LwIP and a Webserver.
 - fpga-cortex-m1-blinky: LED blinker program for a system containing the encrypted HDL soft core CoreCortexM1 (Microsemi:DirectCore:CoreCortexM1:<version>) in an RTG4 or PolarFire FPGA device.
 - m1fpga-cortex-m1-blinky: LED blinker program for a system containing the pre placed and routed CortexM1 (Microsemi:DirectCore:CortexM1Top:<version>) in an M1 variant IGLOO, ProASIC3, ProASIC3L or Fusion FPGA device.
 - miv-rv32im-interrupt-blinky: interrupt driven LED blinker and UART echo program for a system containing the Mi-V RISC-V soft processor that supports at least the M extension.
 - miv-rv32im-systick-blinky: timer driven LED blinker and UART echo program for a system containing the MiV RISC-V soft processor that supports at least the M extension.
 - miv-rv32iamf-mandelbrot-uart: Displaying Mandelbrot fractals with ASCII art through UART while using the RISC-V F extension
 - miv-rv32iamf-raytracer-uart-cpp: ASCII art raytraced rendering of a sphere while using C++ and RISC-V F extension. Output is displayed over UART, extra attention needs to be paid to the readme and get the UART clocked correctly. The terminal window most likely must be resized to fit the content without any artifacts.
 - smartfusion-cortex-m3-blinky: LED blinker program for a SmartFusion Cortex-M3 system.
 - smartfusion2-cortex-m3-blinky: LED blinker program for a SmartFusion2 Cortex-M3 system.
 - All the Mi-V projects can be run and debugged without target hardware on the Renode emulation platform.
 - The projects have enabled cppcheck on each build.


### Example debug launch configurations

## Empty workspace

## Creating a new workspace


